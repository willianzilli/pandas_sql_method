from sqlalchemy import MetaData, Table, ForeignKey, Column, String, Integer, Text, DateTime, Numeric, Boolean, PrimaryKeyConstraint, UniqueConstraint, Float
from sqlalchemy.orm import declarative_base

TABLE_SCHEMA = "my_schema"
Base = declarative_base(metadata=MetaData(schema=TABLE_SCHEMA))

class MyTable(Base):
    __tablename__ = 'mytable'

    id = Column('id', Integer, nullable=False)
    social_number = Column('social_number', String(100), nullable=False)
    name = Column('name', String(100), nullable=False)
    birthdate = Column('birthdate', DateTime, nullable=False)
    city = Column('birthdate', String(100), nullable=False)
    address = Column('birthdate', String(100), nullable=False)
    address_number = Column('birthdate', String(100), nullable=False)

    __table_args__ = (
        PrimaryKeyConstraint("id", name=f"{__tablename__}_pk"),
        UniqueConstraint("social_number", "name", name=f"{__tablename__}_un"),
    )

    def OnConflictColumns():
        return [
            'city',
            'address',
            'address_number',
        ]
